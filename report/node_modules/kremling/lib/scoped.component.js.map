{"version":3,"sources":["../src/scoped.component.js"],"names":["resetCounter","styleTags","counter","reactSupportsReturningArrays","createPortal","Scoped","props","state","css","postcss","Error","styles","id","newCssState","newPostcssState","kremlingChildren","addKremlingAttributeToChildren","children","length","prevProps","doneWithCss","setState","namespace","doneWithPostcss","indexOf","trim","firstRule","substring","console","warn","styleRef","kremlingAttrName","kremlingAttrValue","existingDomEl","kremlings","kremlingAttr","kremlingValue","defaultNamespace","kremlingSelector","transformedCSS","replace","match","cssRule","split","map","cssSplit","exec","builtIn","test","join","el","document","createElement","setAttribute","textContent","head","appendChild","Component","propTypes","string","object","Children","isValidElement","child","type","Fragment","fragmentChildren","cloneElement","parentNode","removeChild","querySelector","innerHTML"],"mappings":"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","file":"scoped.component.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst styleTags = {};\nlet counter = 0;\n\nconst reactSupportsReturningArrays = !!ReactDOM.createPortal;\n\nexport class Scoped extends React.Component {\n  static propTypes = {\n    css: PropTypes.string,\n    postcss: PropTypes.object,\n    namespace: PropTypes.string,\n  }\n\n  static defaultNamespace = 'kremling'\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    if (!props.css && !props.postcss) throw Error(`Kremling's <Scoped /> component requires either the 'css' or 'postcss' props.`);\n    if (props.css && props.postcss) throw Error(`Kremling's <Scoped /> component requires either the 'css' or 'postcss' props. Cannot use both.`);\n    if (props.postcss && !(typeof props.postcss.styles === 'string' && props.postcss.id)) throw Error(`Kremlings's <Scoped /> component 'postcss' prop requires an object containing 'styles' and 'id' properties. Try using the kremling-loader.`);\n    if (props.css) {\n      this.state = this.newCssState(props);\n    } else {\n      this.state = this.newPostcssState(props);\n    }\n  }\n\n  addKremlingAttributeToChildren = (children) => {\n    return React.Children.map(children, child => {\n      if (React.isValidElement(child)) {\n        if (child.type === React.Fragment && React.Fragment) {\n          const fragmentChildren = this.addKremlingAttributeToChildren(child.props.children);\n          return React.cloneElement(child, {}, fragmentChildren);\n        } else {\n          return React.cloneElement(child, {[this.state.kremlingAttrName]: this.state.kremlingAttrValue});\n        }\n      } else {\n        return child;\n      }\n    });\n  }\n\n  render() {\n    const kremlingChildren = this.addKremlingAttributeToChildren(this.props.children);\n\n    if (reactSupportsReturningArrays) {\n      return kremlingChildren;\n    } else {\n      // React 15 or below\n      if (kremlingChildren.length > 1) {\n        throw new Error(`kremling's <Scoped /> component requires exactly one child element unless you are using react@>=16`);\n      } else if (kremlingChildren.length === 1) {\n        return kremlingChildren[0];\n      } else {\n        return null;\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.css) {\n      if (this.state.css !== this.props.css) {\n        this.doneWithCss();\n        this.setState(this.newCssState(this.props))\n      }\n    } else {\n      if (prevProps.postcss.id !== this.props.postcss.id\n        || prevProps.postcss.styles !== this.props.postcss.styles\n        || prevProps.postcss.namespace !== this.props.postcss.namespace) {\n        this.doneWithPostcss();\n        this.setState(this.newPostcssState(this.props));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.css) {\n      this.doneWithCss();\n    } else {\n      this.doneWithPostcss();\n    }\n  }\n\n  newCssState(props) {\n    if (typeof props.css !== 'string') {\n      return;\n    }\n\n    if (props.css.indexOf(\"&\") < 0 && props.css.trim().length > 0) {\n      const firstRule = props.css.substring(0, props.css.indexOf(\"{\")).trim();\n      console.warn(\n        `Kremling's <Scoped css=\"...\"> css prop should have the '&' character in it to scope the css classes: ${firstRule}`\n      );\n    }\n\n    let styleRef, kremlingAttrName, kremlingAttrValue;\n    const existingDomEl = styleTags[props.css];\n\n    if (existingDomEl) {\n      styleRef = existingDomEl;\n      existingDomEl.kremlings++;\n      kremlingAttrName = styleRef.kremlingAttr;\n      kremlingAttrValue = styleRef.kremlingValue;\n    } else {\n      // The attribute for namespacing the css\n      kremlingAttrName = `data-${props.namespace || Scoped.defaultNamespace}`;\n      kremlingAttrValue = counter++;\n\n      // The css to append to the dom\n      const kremlingSelector = `[${kremlingAttrName}=\"${kremlingAttrValue}\"]`;\n      const transformedCSS = props.css.replace(/& ([^{}])+{/g, (match, cssRule) => {\n        return match\n          .split(\",\") // multiple rules on the same line split by a comma\n          .map(cssSplit => {\n            cssSplit = cssSplit.trim();\n\n            // ignore css rules that don't begin with '&'\n            if (cssSplit.indexOf('&') === -1) return cssSplit.replace('{', '').trim();\n\n            cssSplit = (/[^&](.+)[^{]+/g).exec(cssSplit)[0].trim();\n\n            let builtIn = false;\n            if (!/^([.#]\\w+)/.test(cssSplit)) {\n              builtIn = true;\n            }\n            // if it's not a built-in selector, prepend the data attribute. Otherwise, append\n            return !builtIn\n              ? `${kremlingSelector} ${cssSplit}, ${kremlingSelector}${cssSplit}`\n              : `${kremlingSelector} ${cssSplit}, ${cssSplit}${kremlingSelector}`;\n          })\n          .join(\", \") + ' {';\n      });\n\n      // The dom element\n      const el = document.createElement('style');\n      el.setAttribute('type', 'text/css');\n      el.textContent = transformedCSS;\n      el.kremlings = 1;\n      el.kremlingAttr = kremlingAttrName;\n      el.kremlingValue = kremlingAttrValue;\n      document.head.appendChild(el);\n      styleTags[props.css] = el;\n      styleRef = el;\n    }\n\n    return {\n      css: props.css,\n      styleRef,\n      kremlingAttrName,\n      kremlingAttrValue,\n    };\n  }\n\n  doneWithCss = () => {\n    if (this.state.styleRef && --this.state.styleRef.kremlings === 0) {\n      this.state.styleRef.parentNode.removeChild(this.state.styleRef);\n      delete styleTags[this.props.css];\n    }\n  }\n\n  doneWithPostcss = () => {\n    this.state.styleRef.counter -= 1;\n    if (this.state.styleRef.counter === 0) {\n      this.state.styleRef.parentNode.removeChild(this.state.styleRef);\n    }\n  }\n\n  newPostcssState = (props) => {\n    const kremlingAttrName = props.postcss.namespace || 'data-kremling';\n    const kremlingAttrValue = props.postcss.id;\n    let styleRef = this.state.styleRef || document.head.querySelector(`[${kremlingAttrName}=\"${kremlingAttrValue}\"]`);\n    if (!styleRef) {\n      styleRef = document.createElement('style');\n      styleRef.setAttribute('type', 'text/css');\n      styleRef.counter = 1;\n    } else {\n      styleRef.counter += 1;\n    }\n    styleRef.setAttribute(kremlingAttrName, kremlingAttrValue);\n    styleRef.innerHTML = props.postcss.styles;\n    document.head.appendChild(styleRef);\n    return {\n      kremlingAttrName,\n      kremlingAttrValue,\n      styleRef\n    }\n  }\n\n}\n\n// For tests\nexport function resetCounter() {\n  counter = 0;\n}\n"]}